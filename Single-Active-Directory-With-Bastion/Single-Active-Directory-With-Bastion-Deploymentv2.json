{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created"
            }
        },
        "ouUsers": {
            "type": "string",
            "defaultValue": "AVD-Users",
            "metadata": {
                "description": "OU Users AVD name"
            }
        },
        "ouHosts": {
            "type": "string",
            "defaultValue": "AVD-Hosts",
            "metadata": {
                "description": "OU Hosts AVD name"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the administrator account of the AD and AD Connect VM"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the AD and AD Connect VM"
            }
        },
        "WindowsOSVersionforADandADConnectVM": {
            "type": "string",
            "defaultValue": "2022-datacenter-azure-edition",
            "allowedValues": [
                "2012-r2-datacenter-gensecond",
                "2016-datacenter-gensecond",
                "2019-datacenter-gensecond",
                "2022-datacenter-azure-edition"
            ],
            "metadata": {
                "description": "OS version for the AD and AD Connect VMs."
            }
        },
        "TypeofDiksforADandADConnectVM": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Type of Disk for the AD and AD Connect VMs."
            }
        },
        "AdvirtualMachineName": {
            "type": "string",
            "defaultValue": "VM-AD",
            "metadata": {
                "description": "Virtual machine name for AD."
            }
        },
        "AdvmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of the VM for the AD VM."
            }
        },
        "AdprivateIPAddress": {
            "type": "string",
            "defaultValue": "10.0.0.4",
            "metadata": {
                "description": "Private IP address for AD."
            }
        },
        "AdConnectvirtualMachineName": {
            "type": "string",
            "defaultValue": "VM-AD-Connect",
            "metadata": {
                "description": "Virtual machine name for AD Connect."
            }
        },
        "AdConnectvmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of the VM for the AD Connect VM."
            }
        },

        "AdConnectprivateIPAddress": {
            "type": "string",
            "defaultValue": "10.0.1.4",
            "metadata": {
                "description": "Private IP address for AD Connect."
            }
        },
        "ADvirtualNetworkAddressRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "AD AD Connect Virtual network address range."
            }
        },
        "AdsubnetName": {
            "type": "string",
            "defaultValue": "ADSubnet",
            "metadata": {
            "description": "Subnet name for AD VM."
            }
        },
        "AdsubnetRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Subnet IP range for AD VM."
            }
        },
        "AdConnectsubnetName": {
            "type": "string",
            "defaultValue": "ADConnectSubnet",
            "metadata": {
                "description": "Subnet name for AD Connect VM."
            }
        },
        "AdConnectsubnetRange": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "Subnet IP range for AD Connect VM."
            }
        },
        "AVDvirtualNetworkName": {
            "type": "string",
            "defaultValue": "AVD-VNET",
            "metadata": {
              "description": "The name of the Virtual Network for the AVD Host"
            }
        },
        "AVDvirtualNetworkAddressRange": {
            "type": "string",
            "defaultValue": "20.0.0.0/16",
            "metadata": {
              "description": "AVD Virtual network address range"
            }
        },
        "HostssubnetName": {
            "type": "string",
            "defaultValue": "AVDHostsSubnet",
            "metadata": {
                "description": "Subnet name for AVD Host VMs."
            }
        },
        "HostssubnetRange": {
            "type": "string",
            "defaultValue": "20.0.0.0/24",
            "metadata": {
                "description": "Subnet IP range for AVD Host VMs"
            }
        },
        "HUBvirtualNetworkName": {
            "type": "string",
            "defaultValue": "HUB-VNET",
            "metadata": {
              "description": "The name of the Virtual HUB Network"
            }
        },
        "HUBvirtualNetworkAddressRange": {
            "type": "string",
            "defaultValue": "30.0.0.0/16",
            "metadata": {
              "description": "HUB Virtual network address range"
            }
        },
        "BastionsubnetRange": {
            "type": "string",
            "defaultValue": "30.0.0.0/24",
            "metadata": {
                "description": "The address range of the Bastion subnet created in the HUB VNET"
            }
        },
        "GatewaysubnetRange": {
            "type": "string",
            "defaultValue": "30.0.1.0/27",
            "metadata": {
                "description": "The address range of the Gateway subnet created in the HUB VNET"
            }
        },
        "FirewallsubnetRange": {
            "type": "string",
            "defaultValue": "30.0.2.0/26",
            "metadata": {
                "description": "The address range of the Azure Firewall Subnet created in the HUB VNET in / 26 mini"
            }
        },
        "VPN-Gateway-name": {
            "type": "string",
            "defaultValue": "VpnGw1",
            "allowedValues": [
                "VpnGw1",
                "VpnGw2",
                "VpnGw3",
                "VpnGw4",
                "VpnGw5"
            ],
            "metadata": {
                "description": "VPN Gateway SKU
                VpnGw1 = 650 Mbps
                VpnGw2 = 1 Gbps
                VpnGw3 = 1,25 Gbps
                VpnGw4 = 5 Gbps
                VpnGw5 = 10 Gbps"
            }
        }
    },
    "variables": {
        "VnetForADTemplateUri": "https://raw.githubusercontent.com/AlexandreMoreaux/Azure-Virtual-Desktop/main/Single-Active-Directory-With-Bastion/Nested/Vnet-For-AD-With-Bastionv2.json",
        "VnetWithDNSForADTemplateUri":"https://raw.githubusercontent.com/AlexandreMoreaux/Azure-Virtual-Desktop/main/Single-Active-Directory-With-Bastion/Nested/Vnet-With-DNS-For-AD-With-Bastionv2.json",
        "ADOUTemplateUri" : "https://raw.githubusercontent.com/AlexandreMoreaux/Azure-Virtual-Desktop/main/Single-Active-Directory-With-Bastion/OrganizationUnit/ou.ps1",
        "InstallationADConnectTemplateUri" : "https://raw.githubusercontent.com/AlexandreMoreaux/Azure-Virtual-Desktop/main/Single-Active-Directory-With-Bastion/AzureAdConnect/Installationadconnect.ps1",
        "ADPDCTemplateUri": "https://github.com/AlexandreMoreaux/Azure-Virtual-Desktop/raw/main/Single-Active-Directory-With-Bastion/DSC/CreateADPDC.zip",
        "AzureFirewallSubnetName": "AzureFirewallSubnet",
        "AzureVPNGatewaySubnetName": "GatewaySubnet",
        "AzureBastionSubnetName": "AzureBastionSubnet",
        "BastionpublicIPAddressName": "Azure-Bastion-Public-Ip",
        "VPNGatewayName": "VPN-Gateway",
        "VPNGatewaypublicIPAddressName": "VPN-Public-Ip",
        "VPNType": "RouteBased",
        "FirewallpublicIPAddressName": "Firewall-Public-Ip",
        "azureFirewallTier": "Standard",
        "FirewallNamePolicies": "Azure-Firewall-Policies",
        "FirewallName": "Azure-Firewall",
        "BastionName": "Azure-Bastion",
        "azureFirewallPolicyTier": "Standard",
        "PublisherWindowsserver": "MicrosoftWindowsServer",
        "OfferWindowsServer": "WindowsServer",
        "ADNic": "[concat(parameters('AdvirtualMachineName'),'_NIC')]",
        "ADConnectNic": "[concat(parameters('AdConnectvirtualMachineName'),'_NIC')]",
        "ADVnetName": "[concat(parameters('AdvirtualMachineName'),'_VNET')]"

    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('BastionpublicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": []
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('VPNGatewaypublicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": []
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('FirewallpublicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": []
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-11-01",
            "name": "VNet",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('VnetForADTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ADvirtualNetworkAddressRange": {
                        "value": "[parameters('ADvirtualNetworkAddressRange')]"
                    },
                    "AVDvirtualNetworkName": {
                        "value": "[parameters('AVDvirtualNetworkName')]"
                    },
                    "AVDvirtualNetworkAddressRange": {
                        "value": "[parameters('AVDvirtualNetworkAddressRange')]"
                    },
                    "HUBvirtualNetworkName": {
                        "value": "[parameters('HUBvirtualNetworkName')]"
                    },
                    "HUBvirtualNetworkAddressRange": {
                        "value": "[parameters('HUBvirtualNetworkAddressRange')]"
                    },
                    "AdsubnetName": {
                        "value": "[parameters('AdsubnetName')]"
                    },
                    "AdsubnetRange": {
                        "value": "[parameters('AdsubnetRange')]"
                    },
                    "AdConnectsubnetName": {
                        "value": "[parameters('AdConnectsubnetName')]"
                    },
                    "AdConnectsubnetRange": {
                        "value": "[parameters('AdConnectsubnetRange')]"
                    },
                    "HostssubnetName": {
                        "value": "[parameters('HostssubnetName')]"
                    },
                    "HostssubnetRange": {
                        "value": "[parameters('HostssubnetRange')]"
                    },
                    "BastionsubnetRange": {
                        "value": "[parameters('BastionsubnetRange')]"
                    },
                    "GatewaysubnetRange": {
                        "value": "[parameters('GatewaysubnetRange')]"
                    },
                    "FirewallsubnetRange": {
                        "value": "[parameters('FirewallsubnetRange')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                },
                "variables": {
                    "ADVnetName": {
                        "value": "[variables('ADVnetName')]"
                    },
                    "AzureBastionSubnetName":{
                        "value": "[variables('AzureBastionSubnetName')]"
                    },
                    "AzureVPNGatewaySubnetName":{
                        "value": "[variables('AzureVPNGatewaySubnetName')]"
                    },
                    "AzureFirewallSubnetName":{
                        "value": "[variables('AzureFirewallSubnetName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-02-01",
            "name": "[variables('ADNic')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('AdprivateIPAddress')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('ADVnetName'), parameters('AdsubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-02-01",
            "name": "[variables('ADConnectNic')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('AdConnectprivateIPAddress')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('ADVnetName'), parameters('AdConnectsubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('AdvirtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ADNic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('AdvmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('AdvirtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('PublisherWindowsserver')]",
                        "offer": "[variables('OfferWindowsServer')]",
                        "sku": "[parameters('WindowsOSVersionforADandADConnectVM')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('AdvirtualMachineName'),'_OSDisk')]",
                        "caching": "ReadOnly",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('TypeofDiksforADandADConnectVM')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('AdvirtualMachineName'), '_DataDisk')]",
                            "caching": "ReadWrite",
                            "createOption": "Empty",
                            "diskSizeGB": 20,
                            "managedDisk": {
                            "storageAccountType": "[parameters('TypeofDiksforADandADConnectVM')]"
                            },
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ADNic'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2019-03-01",
                    "name": "CreateADForest",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[parameters('AdvirtualMachineName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[variables('ADPDCTemplateUri')]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-11-01",
            "name": "UpdateVNetDNS",
            "dependsOn": [
                "CreateADForest"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('VnetWithDNSForADTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ADvirtualNetworkAddressRange": {
                        "value": "[parameters('ADvirtualNetworkAddressRange')]"
                    },
                    "AVDvirtualNetworkName": {
                        "value": "[parameters('AVDvirtualNetworkName')]"
                    },
                    "AVDvirtualNetworkAddressRange": {
                        "value": "[parameters('AVDvirtualNetworkAddressRange')]"
                    },
                    "HUBvirtualNetworkName": {
                        "value": "[parameters('HUBvirtualNetworkName')]"
                    },
                    "HUBvirtualNetworkAddressRange": {
                        "value": "[parameters('HUBvirtualNetworkAddressRange')]"
                    },
                    "AdsubnetName": {
                        "value": "[parameters('AdsubnetName')]"
                    },
                    "AdsubnetRange": {
                        "value": "[parameters('AdsubnetRange')]"
                    },
                    "AdConnectsubnetName": {
                        "value": "[parameters('AdConnectsubnetName')]"
                    },
                    "AdConnectsubnetRange": {
                        "value": "[parameters('AdConnectsubnetRange')]"
                    },
                    "HostssubnetName": {
                        "value": "[parameters('HostssubnetName')]"
                    },
                    "HostssubnetRange": {
                        "value": "[parameters('HostssubnetRange')]"
                    },
                    "BastionsubnetRange": {
                        "value": "[parameters('BastionsubnetRange')]"
                    },
                    "GatewaysubnetRange": {
                        "value": "[parameters('GatewaysubnetRange')]"
                    },
                    "FirewallsubnetRange": {
                        "value": "[parameters('FirewallsubnetRange')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[parameters('AdprivateIPAddress')]"
                        ]
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                },
                "variables": {
                    "ADVnetName": {
                        "value": "[variables('ADVnetName')]"
                    },
                    "AzureBastionSubnetName":{
                        "value": "[variables('AzureBastionSubnetName')]"
                    },
                    "AzureVPNGatewaySubnetName":{
                        "value": "[variables('AzureVPNGatewaySubnetName')]"
                    },
                    "AzureFirewallSubnetName":{
                        "value": "[variables('AzureFirewallSubnetName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-04-01",
            "name": "[variables('BastionName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "UpdateVNetDNS",
                "[variables('BastionpublicIPAddressName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('HUBvirtualNetworkName'), variables('AzureBastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('BastionpublicIPAddressName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('AdvirtualMachineName'), '/OU')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "UpdateVNetDNS"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "settings": {
                    "fileUris": "[variables('ADOUTemplateUri')]",
                    "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File ou.ps1', ' -ouUsers ', '\"' , parameters('ouUsers') , '\"', ' -ouHosts ', '\"' , parameters('ouHosts') , '\"') ]"
                },
                "protectedSettings": {
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('AdConnectvirtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "UpdateVNetDNS"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('AdConnectvmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('AdConnectvirtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('PublisherWindowsserver')]",
                        "offer": "[variables('OfferWindowsServer')]",
                        "sku": "[parameters('WindowsOSVersionforADandADConnectVM')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('AdConnectvirtualMachineName'),'_OSDisk')]",
                        "caching": "ReadOnly",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('TypeofDiksforADandADConnectVM')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ADConnectNic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('AdConnectvirtualMachineName'),'/joindomain')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('AdConnectvirtualMachineName')]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainName')]",
                    "User": "[concat(parameters('domainName'), '\\', parameters('adminUsername'))]",
                    "Restart": "true",
                    "Options": "3"
                },
                "protectedSettings": {
                    "Password": "[parameters('adminPassword')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('AdConnectvirtualMachineName'), '/AdConnect')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('AdConnectvirtualMachineName'),'/extensions/joindomain')]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "settings": {
                    "fileUris": "[variables('InstallationADConnectTemplateUri')]",
                    "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File Installationadconnect.ps1')]"
                },
                "protectedSettings": {
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "name":"[concat(parameters('HUBvirtualNetworkName'), '/peering_', variables('ADVnetName'), '_', parameters('HUBvirtualNetworkName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet",
                "UpdateVNetDNS"
            ],
            "properties": {
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('ADVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "name":"[concat(variables('ADVnetName'), '/peering_', parameters('HUBvirtualNetworkName'), '_', variables('ADVnetName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet",
                "UpdateVNetDNS"
            ],
            "properties": {
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('HUBvirtualNetworkName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "name":"[concat(parameters('HUBvirtualNetworkName'), '/peering_', parameters('AVDvirtualNetworkName'), '_', parameters('HUBvirtualNetworkName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet",
                "UpdateVNetDNS"
            ],
            "properties": {
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('AVDvirtualNetworkName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "name":"[concat(parameters('AVDvirtualNetworkName'), '/peering_', parameters('HUBvirtualNetworkName'), '_', parameters('AVDvirtualNetworkName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet",
                "UpdateVNetDNS"
            ],
            "properties": {
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('HUBvirtualNetworkName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "name":"[concat(variables('ADVnetName'), '/peering_', parameters('AVDvirtualNetworkName'), '_', variables('ADVnetName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet",
                "UpdateVNetDNS"
            ],
            "properties": {
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('AVDvirtualNetworkName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "name":"[concat(parameters('AVDvirtualNetworkName'), '/peering_', variables('ADVnetName'), '_', parameters('AVDvirtualNetworkName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet",
                "UpdateVNetDNS"
            ],
            "properties": {
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('ADVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-11-01",
            "name": "[variables('VPNGatewayName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "UpdateVNetDNS",
                "[variables('VPNGatewaypublicIPAddressName')]"
            ],
            "properties": {
              "ipConfigurations": [
                {
                  "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                      "id" : "[resourceId('Microsoft.Network/publicIpAddresses', variables('VPNGatewaypublicIPAddressName'))]"
                    },
                    "subnet": {
                      "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('HUBvirtualNetworkName'), variables('AzureVPNGatewaySubnetName'))]"
                    }
                },
                "name": "vnetGatewayConfig"
            }
              ],
              "vpnType": "[variables('VPNType')]",
              "enableBgp": false,
              "sku": {
                "name": "[parameters('VPN-Gateway-name')]",
                "tier": "[parameters('VPN-Gateway-name')]"
              }
            }
        },
        {
            "apiVersion": "2022-07-01",
            "type": "Microsoft.Network/firewallPolicies",
            "resources": [],
            "properties": {
                "sku": {
                    "tier": "[variables('azureFirewallPolicyTier')]"
                }
            },
            "name": "[variables('FirewallNamePolicies')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-05-01",
            "name": "[variables('FirewallName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "UpdateVNetDNS",
                "[variables('FirewallpublicIPAddressName')]",
                "[resourceId('Microsoft.Network/firewallPolicies', variables('FirewallNamePolicies'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('FirewallpublicIPAddressName')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('HUBvirtualNetworkName'), variables('AzureFirewallSubnetName'))]"
                            },
                            "publicIpAddress": {
                                "id" : "[resourceId('Microsoft.Network/publicIpAddresses', variables('FirewallpublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "sku": {
                    "tier": "[variables('azureFirewallTier')]"
                },
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('FirewallNamePolicies'))]"
                }
            }
        }
    ]
}
